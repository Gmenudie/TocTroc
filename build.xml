<?xml version="1.0" encoding="utf-8"?>
<project name="CakePHP" default="build">
	<!--
	Build.xml file for CakePHP

	Uses phing to create releases, and pear packages.
	Based off of build.xml in doctrine.

	Requires the cakephp/d51PearPkg2 to be installed:

	pear channel-discover pear.domain51.com
	pear install cakephp/Phing_d51PearPkg2Task

	Use the `release` task to update VERSION.txt, and create a new tag.
	Use the `build` task to create a pear package based on the current working copy.
	Use the `clean` task to clean up packaging artifacts.

	-->

	<taskdef classname="phing.tasks.ext.d51PearPkg2Task" name="d51pearpkg2" />
	<property file="build.properties" />

	<!--
		The set of files we're going to package
		Exclude the cli scripts, as they get installed separately.
	 -->
	<fileset id="libs" dir="./lib/Cake">
		<include name="**" />
		<exclude name="Console/cake.bat" />
		<exclude name="Console/cake.php" />
		<exclude name="Console/cake" />
		<exclude name="Test/**" />
	</fileset>

	<!--
		CLI scripts to package and install
	-->
	<fileset id="cli" dir="./lib/Cake/Console">
		<include name="cake.bat" />
		<include name="cake.php" />
		<include name="cake" />
	</fileset>

	<!-- start fresh each time.  Remove the dist and build dirs -->
	<target name="clean">
		<delete dir="${build.dir}" includeemptydirs="true" />
		<delete dir="${dist.dir}" includeemptydirs="true" />
	</target>

	<!-- Read the current version, so we can replace it -->
	<target name="current-version">
		<exec executable="php" outputProperty="version">
			<arg value="-r" />
			<arg value="$fh = file('./lib/Cake/VERSION.txt'); echo array_pop($fh);" />
		</exec>
	</target>

	<!-- Makes directories and sets properties -->
	<target name="prepare" depends="current-version">
		<!-- set PEAR stability based on version number. -->
		<condition property="pear.stability" value="beta">
			<contains string="${version}" substring="beta" casesensitive="false"/>
		</condition>
		<condition property="pear.stability" value="alpha">
			<contains string="${version}" substring="alpha" casesensitive="false"/>
		</condition>
		<condition property="pear.stability" value="devel">
			<contains string="${version}" substring="dev" casesensitive="false"/>
		</condition>
		<condition property="pear.stability" value="beta">
			<contains string="${version}" substring="rc" casesensitive="false" />
		</condition>
		<condition property="pear.stability" value="stable">
			<not><isset property="pear.stability"/></not>
		</condition>

		<!-- pear versions need to not have '-' -->
		<exec executable="php" outputProperty="pear.version">
			<arg value="-r" />
			<arg value="echo str_replace(array('-'), array(''), '${version}');" />
		</exec>

		<!-- Used for other targets -->
		<property name="pear.package" value="${project.name}-${pear.version}" />

		<echo msg="Preparing package of ${version} (${pear.version}+${pear.stability})" />

		<!-- Get the current git branch -->
		<exec command="git name-rev HEAD 2>/dev/null | awk '{ print $2 }'" outputProperty="git.branch" />
	</target>

	<!--
		Copy all the files to build/ so they can be packaged up.
	-->
	<target name="copy-files" depends="clean,prepare">
		<echo msg="Creating build + dist directories." />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />

		<echo msg="Copying files to build directory" />
		<copy todir="${build.dir}/${pear.package}/Cake">
			<fileset refid="libs" />
		</copy>
		<copy todir="${build.dir}/${pear.package}/bin">
			<fileset refid="cli" />
		</copy>
	</target>

	<!--
		Define the package.xml.  Using xml to make xml is fun!
	-->
	<target name="define-pear-package" depends="copy-files">
		<d51pearpkg2 addhiddenfiles="true" baseinstalldir="/" dir="${build.dir}/${pear.package}">
			<name>CakePHP</name>
			<summary>CakePHP Rapid Development Framework</summary>
			<channel>pear.cakephp.org</channel>
			<description>CakePHP is an application development framework for PHP 5.2+</description>

			<lead user="mark_story" name="Mark Story" email="mark@mark-story.com" />
			<lead user="lorenzo" name="José Lorenzo Rodrígu